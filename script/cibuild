#!/bin/bash
set -ex
export PATH=~/.local/bin:$PATH
export PYTHONPATH=~/lib/python2.7/site-packages:$PYTHONPATH
#find . -iname "*.py" | xargs pylint --rcfile alibuild/.pylintrc
coverage run -a alibuild/aliBuild analytics off
time coverage run -a alibuild/aliBuild --help
coverage run -a alibuild/aliBuild analytics off
test -e ~/.config/alibuild/disable-analytics
test ! -e ~/.config/alibuild/analytics-uuid
coverage run -a alibuild/aliBuild analytics on
test ! -e ~/.config/alibuild/disable-analytics
test -e ~/.config/alibuild/analytics-uuid
coverage run -a alibuild/aliBuild analytics off
test -e ~/.config/alibuild/disable-analytics
test -e ~/.config/alibuild/analytics-uuid
PYTHONPATH="alibuild:$PYTHONPATH" time coverage run -a -m unittest discover alibuild/tests
time coverage run -a alibuild/aliBuild -z test-init init zlib
pushd test-init/alidist && git status && popd
pushd test-init/zlib && git status && popd
time coverage run -a alibuild/aliBuild -c alibuild/tests/testdist build non-existsting --no-system --disable GCC-Toolchain || true
time coverage run -a alibuild/aliBuild -c alibuild/tests/testdist build broken1 --no-system --disable GCC-Toolchain 2>&1 | grep "Header missing"
time coverage run -a alibuild/aliBuild -c alibuild/tests/testdist build broken2 --no-system --disable GCC-Toolchain 2>&1 | grep "Empty recipe"
time coverage run -a alibuild/aliBuild -c alibuild/tests/testdist build broken3 --no-system --disable GCC-Toolchain 2>&1 | grep "Unable to parse"
time coverage run -a alibuild/aliBuild -c alibuild/tests/testdist build broken4 --no-system --disable GCC-Toolchain 2>&1 | grep "Malformed header"
time coverage run -a alibuild/aliBuild -c alibuild/tests/testdist build broken5 --no-system --disable GCC-Toolchain 2>&1 | grep "Missing package"
time coverage run -a alibuild/aliBuild -c alibuild/tests/testdist build broken6 --no-system --disable GCC-Toolchain 2>&1 | grep scanning
time coverage run -a alibuild/aliBuild -c alibuild/tests/testdist build broken7 --no-system --disable GCC-Toolchain 2>&1 | grep "Malformed entry prefer_system"
time coverage run -a alibuild/aliBuild build zlib --no-system --disable GCC-Toolchain
alibuild/alienv q
alibuild/alienv setenv zlib/latest -c bash -c '[[ $LD_LIBRARY_PATH == */zlib/* ]]'
time coverage run -a alibuild/aliDoctor AliPhysics
time coverage run -a alibuild/aliBuild build zlib --dry-run
time coverage run -a alibuild/aliBuild --aggressive-cleanup --docker -a slc7_x86-64 --always-prefer-system -d build zlib
#time coverage run -a alibuild/aliBuild --aggressive-cleanup --docker -a ubuntu1510_x86-64 -d build zlib
time coverage run -a alibuild/aliBuild init zlib
time coverage run -a alibuild/aliBuild version

# test the docs
pushd alibuild
  jekyll build -s docs -d _site --baseurl .
  script/custom_htmlproofer.rb
popd

# Deploy if this is a tag (do it only for one Python version, not all matrix tests)
if [[ $TRAVIS_PYTHON_VERSION == 3* && $TRAVIS_TAG && $TRAVIS_PULL_REQUEST == false ]]; then
  pushd alibuild
    sed -i.deleteme -e "s/LAST_TAG/${TRAVIS_TAG}/g" setup.py
    rm -f *.deleteme
    git clean -fxd
    git diff
    python setup.py sdist
    cat > ~/.pypirc <<EOF
[distutils]
index-servers=pypi

[pypi]
username = alibuild
password = $PYPI_PASSWORD
EOF
    twine upload dist/*
    rm -f ~/.pypirc
  popd
fi
